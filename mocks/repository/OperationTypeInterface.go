// Code generated by mockery v2.14.1. DO NOT EDIT.

package repository

import (
	entity "pismo/entity"

	mock "github.com/stretchr/testify/mock"
)

// OperationTypeInterface is an autogenerated mock type for the OperationTypeInterface type
type OperationTypeInterface struct {
	mock.Mock
}

// Find provides a mock function with given fields: operationTypeID
func (_m *OperationTypeInterface) Find(operationTypeID uint64) (entity.OperationType, error) {
	ret := _m.Called(operationTypeID)

	var r0 entity.OperationType
	if rf, ok := ret.Get(0).(func(uint64) entity.OperationType); ok {
		r0 = rf(operationTypeID)
	} else {
		r0 = ret.Get(0).(entity.OperationType)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint64) error); ok {
		r1 = rf(operationTypeID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewOperationTypeInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewOperationTypeInterface creates a new instance of OperationTypeInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewOperationTypeInterface(t mockConstructorTestingTNewOperationTypeInterface) *OperationTypeInterface {
	mock := &OperationTypeInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
