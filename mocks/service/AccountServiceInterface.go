// Code generated by mockery v2.14.1. DO NOT EDIT.

package service

import (
	entity "pismo/entity"

	mock "github.com/stretchr/testify/mock"
)

// AccountServiceInterface is an autogenerated mock type for the AccountServiceInterface type
type AccountServiceInterface struct {
	mock.Mock
}

// Get provides a mock function with given fields: accountID
func (_m *AccountServiceInterface) Get(accountID uint64) (entity.Account, error) {
	ret := _m.Called(accountID)

	var r0 entity.Account
	if rf, ok := ret.Get(0).(func(uint64) entity.Account); ok {
		r0 = rf(accountID)
	} else {
		r0 = ret.Get(0).(entity.Account)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint64) error); ok {
		r1 = rf(accountID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Insert provides a mock function with given fields: account
func (_m *AccountServiceInterface) Insert(account entity.Account) (entity.Account, error) {
	ret := _m.Called(account)

	var r0 entity.Account
	if rf, ok := ret.Get(0).(func(entity.Account) entity.Account); ok {
		r0 = rf(account)
	} else {
		r0 = ret.Get(0).(entity.Account)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(entity.Account) error); ok {
		r1 = rf(account)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewAccountServiceInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewAccountServiceInterface creates a new instance of AccountServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAccountServiceInterface(t mockConstructorTestingTNewAccountServiceInterface) *AccountServiceInterface {
	mock := &AccountServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
